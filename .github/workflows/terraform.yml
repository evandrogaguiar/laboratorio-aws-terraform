name: Terraform CI/CD

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: latest

    - name: Terraform Init
      run: terraform init -backend=true

    - name: Terraform Format
      run: terraform fmt -check
    
    - name: Terraform Workspace Select
      run: terraform workspace select dev

    - name: Terraform Validade
      run: terraform validate
    
    - name: Terraform Plan
      run: terraform plan --var-file=${GITHUB_WORKSPACE}/envs/dev.tfvars

  prod:
    runs-on: ubuntu-latest
    needs: dev
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/master'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: latest
      
      - name: Terraform Init
        run: terraform init -backend=true
  
      - name: Terraform Format
        run: terraform fmt -check
      
      - name: Terraform Workspace Select
        run: terraform workspace select prod
  
      - name: Terraform Validade
        run:  terraform validate
      
      - name: Terraform Plan
        run: terraform plan --var-file=${GITHUB_WORKSPACE}/envs/prod.tfvars
